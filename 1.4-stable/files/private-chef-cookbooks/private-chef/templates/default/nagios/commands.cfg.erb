# Command definitions
#
# Automatically generated by Chef

# Host checks
define command {
  command_name    check-host-alive
  command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 2000,80% -c 3000,100% -p 1
}

define command {
  command_name  check-host-alive-by-http
  command_line  $USER1$/check_http -H $HOSTADDRESS
}

# Cluster checks
define command{
	command_name	check_service_cluster
	command_line	$USER1$/check_cluster --service -l $ARG1$ -w $ARG2$ -c $ARG3$ -d $ARG4$ 
	}

define command{
	command_name	check_host_cluster
	command_line	$USER1$/check_cluster --host -l $ARG1$ -w $ARG2$ -c $ARG3$ -d $ARG4$ 
	}

# Service checks

define command {
  command_name check_redis1
  command_line $USER1$/check_redis -H $HOSTADDRESS$
}

define command {
  command_name check_couchdb_repl
  command_line $USER1$/check_couchdb_repl.pl $ARG1$ $ARG2$ $ARG3$ $ARG4$
}

define command {
  command_name check_dhcp
  command_line sudo $USER1$/check_dhcp -t 4
}

define command {
  command_name  check_riak_membership
  command_line  $USER1$/check_riak_membership.rb $HOSTADDRESS$
}

define command {
  command_name   opscode_api_client_list
  command_line   cd /opt/opscode/embedded/service/opscode-platform-debug/knifetest2$USER2$ knife exec scripts/client_list.rb --server https://$HOSTADDRESS$/organizations/knifetest-org
}

define command {
  command_name   opscode_api_cookbook_list
  command_line   cd /opt/opscode/embedded/service/opscode-platform-debug/knifetest2$USER2$ knife exec scripts/cookbook_list.rb --server https://$HOSTADDRESS$/organizations/knifetest-org
}

define command {
  command_name   opscode_api_data_bag_item_show
  command_line   cd /opt/opscode/embedded/service/opscode-platform-debug/knifetest2$USER2$ knife exec scripts/data_bag_item_show.rb --server https://$HOSTADDRESS$/organizations/knifetest-org
}

define command {
  command_name   opscode_api_data_bag_list
  command_line   cd /opt/opscode/embedded/service/opscode-platform-debug/knifetest2$USER2$ knife exec scripts/data_bag_list.rb --server https://$HOSTADDRESS$/organizations/knifetest-org
}

define command {
  command_name   opscode_api_data_bag_show
  command_line   cd /opt/opscode/embedded/service/opscode-platform-debug/knifetest2$USER2$ knife exec scripts/data_bag_show.rb --server https://$HOSTADDRESS$/organizations/knifetest-org
}

define command {
  command_name   opscode_api_node_list
  command_line   cd /opt/opscode/embedded/service/opscode-platform-debug/knifetest2$USER2$ knife exec scripts/node_list.rb --server https://$HOSTADDRESS$/organizations/knifetest-org
}

define command {
  command_name   opscode_api_node_edit_search
  command_line   cd /opt/opscode/embedded/service/opscode-platform-debug/knifetest2$USER2$ knife exec scripts/node_edit.rb --server https://$HOSTADDRESS$/organizations/knifetest-org
}

define command {
  command_name   opscode_api_index_test
  command_line   cd /opt/opscode/embedded/service/opscode-platform-debug/knifetest2$USER2$ knife exec scripts/knife_indexer_check.rb --server https://$HOSTADDRESS$/organizations/knifetest-org
}

define command {
  command_name    check_ec2_count
  command_line    $USER1$/count_ec2_instances.sh
}

define command {
  command_name    check_avail_orgs
  command_line    $USER1$/opscode_avail_orgs.rb -H $HOSTADDRESS$ -p $ARG1$ --Co $ARG2$ --Wo $ARG3$
}

define command {
  command_name    check_solr_proc
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_solr_proc -t 20
}

define command {
  command_name    check_stompserver
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_stompserver -t 20
}

define command {
  command_name    check_chef_client
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_chef_client -t 20
}

define command {
  command_name    check_collectd_client
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_collectd_client -t 20
}

define command {
  command_name    check_rabbitmq
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_rabbitmq -t 20
}

define command {
  command_name    check_opscode_expander
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_opscode_expander_messages -t 20
}

define command {
  command_name    check_authz
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_authz -t 20
}

define command {
  command_name    check_audit
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_audit -t 20
}

define command {
  command_name    check-nagios
  command_line    $USER1$/check_nagios -F <%= File.join(@dir, "/status.dat") %> -e 4 -C /opt/opscode/embedded/nagios/bin/nagios
}

define command {
  command_name    check_file_age
  command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -C "/usr/lib/nagios/plugins/check_file_age -w $ARG1$ -c $ARG2$ $ARG3$" -l nagios -i /var/lib/nagios/.ssh/id_nagios
}

define command {
  command_name    check_file_count
  command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -C "/usr/lib/nagios/checks/file_queues.rb -t count -p $ARG1$ -w $ARG2$ -c $ARG3$" -l app
}

define command {
  command_name    check_log
  command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -C "/usr/lib64/nagios/plugins/check_log -F $ARG1$ -O /tmp/nagios.logcheck.processed -q $ARG2$" -l root
}

define command {
  command_name    check_solr
  command_line    $USER1$/check_solr.rb -c 10 -h $HOSTADDRESS$ -r 10 -p $ARG1$

}

define command {
  command_name    query_solr
  command_line    $USER1$/check_solr.rb -c 10 -h $HOSTADDRESS$ -r 10 -p $ARG1$ -q $ARG2$

}

define command {
  command_name    check_mem
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_mem -t 20
}


define command {
	command_name	check_query_count
	command_line	$USER1$/db_queues.rb -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$ -d $ARG3$ -q $ARG4$ -w $ARG5$ -c $ARG6$
}

define command {
  command_name    check_local_disk
  command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
}

define command {
  command_name    check_local_load
  command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
}

define command {
  command_name    check_local_procs
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_total_procs -t 20
}

define command {
  command_name    check_zombie_procs
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_zombie_procs -t 20
}

define command {
  command_name    check_local_users
  command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
}

define command {
  command_name    check_local_log
  command_line    $USER1$/check_log -F $ARG1$ -O /tmp/nagios.logcheck.processed -q $ARG2$
}

define command {
  command_name    check_dns
  command_line    $USER1$/check_dns -H $ARG1$ -s $HOSTADDRESS$
}

define command {
  command_name    check_ftp
  command_line    $USER1$/check_ftp -H $HOSTADDRESS$
}

define command {
  command_name    check_hpjd
  command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ -C public
}

define command {
  command_name    check_http
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$
}

define command{
        command_name    check_https
        command_line    $USER1$/check_http --ssl -H $HOSTADDRESS$ -I $HOSTADDRESS$
}

define command {
  command_name    check_http_content
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -s $ARG3$
}

define command {
  command_name    check_https_content
  command_line    $USER1$/check_http --ssl -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -s $ARG3$
}

define command {
  command_name    check_http_port
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$
}

define command {
  command_name    check_http_port_path
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$ -u $ARG2$
}

define command {
  command_name    check_http_port_path_auth
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$ -u $ARG2$ -a $ARG3$
}

define command {
  command_name    check_http_port_expect
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$ -e $ARG2$
}

define command {
  command_name    check_http_port_expect_json 
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$ -e $ARG2$ --header=Accept:application/json
}

define command {
  command_name    check_http_port_path_expect_json 
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$ -u $ARG2$ -e $ARG3$ --header=Accept:application/json
}

define command {
  command_name    check_http_port_path_content
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $HOSTADDRESS$ -p $ARG1$ -u $ARG2$ -s $ARG3$
}

define command {
  command_name    check_http_ip_port
  command_line    $USER1$/check_http -I $ARG1$ -H $ARG1$ -p $ARG2$
}

define command {
  command_name    check_mongrel_http_content
  command_line    $USER1$/check_http -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -s $ARG3$ -p $ARG4$
}

define command {
  command_name    check_ntp_time
  command_line    $USER1$/check_ntp_time -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$
}

define command {
  command_name    check_nntp
  command_line    $USER1$/check_nntp -H $HOSTADDRESS$
}

define command {
  command_name    check_ping
  command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
}

define command {
  command_name    check_pop
  command_line    $USER1$/check_pop -H $HOSTADDRESS$
}

define command {
  command_name    check_smtp
  command_line    $USER1$/check_smtp -H $HOSTADDRESS$
}

define command {
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$
}

define command {
	command_name	check_ssh
	command_line	$USER1$/check_ssh $HOSTADDRESS$
}

define command {
  command_name    check_telnet
  command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 23
}

define command {
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$
}

# 'check_mysql' check mysql connectivity
define command {
	command_name	check_mysql
	command_line	$USER1$/check_mysql -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$
}

# 'check_postgresql' check postgresql connectivity
define command {
	command_name	check_postgresql
	command_line	$USER1$/check_pgsql -H $HOSTADDRESS$ -l $ARG1$ -p $ARG2$
}

define command {
	command_name	check_default_mysql
	command_line	$USER1$/check_mysql -H $HOSTADDRESS$ -u nagios -p 3306
}

define command {
  command_name	check_mysql_master
  command_line	$USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$
}

# 'check_mysqlrep' command for mysql replication status
define command {
	command_name    check_replication
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -c check_replication -H $HOSTADDRESS$ -t 20
}

define command {
	command_name	check_mysqlrep
	command_line	$USER1$/check_mysql -H $HOSTADDRESS$ -P 3306 -u nagios -p $ARG1$ -w $ARG2$ -c $ARG3$ -S
}

# nrpe remote host checks
define command {
	command_name    check_nrpe_alive
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -t 20
	}

define command {
	command_name    check_nrpe
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c $ARG1$ -t 20
	}

define command {
	command_name    check_load
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_load -t 20
}

define command {
	command_name    check_dynomite_proc
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_dynomite_proc -t 20
}

define command {
	command_name    check_couchdb_proc
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_couchdb_proc -t 20
}

define command {
	command_name    check_disk
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_$ARG1$ -t 20
}

define command {
	command_name    check_all_disks
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_all_disks -t 20
}

define command {
	command_name    check_couchdb_drbd
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -t 20 -c check_couchdb_drbd
}

define command {
	command_name    check_traffic
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c traffic -t 20
}

define command {
	command_name    check_mysqlhealth
	command_line    $USER1$/check_mysqlhealth.pl -H $HOSTADDRESS$ -u nagios -p $ARG1$ --port 3306 --wa 500 --cc 550
}

define command {
	command_name    check_iowait_time
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_iowait_time -t 20
}

define command {
	command_name    check_tps
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_tps -t 20
}

define command {
	command_name    check_swap
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_swap -t 20
}

define command {
	command_name    check_solr_index
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_$ARG1$_solr_index -t 20
}

define command {
	command_name    check_clock_time
  command_line    $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c check_clock_time -t 20
}

define command {
	command_name    fix_clock_time
  command_line    test $SERVICESTATE$ != OK && $USER1$/check_nrpe -p <%= node['private_chef']['nrpe']['port'] %> -H $HOSTADDRESS$ -c fix_clock_time -t 20
}

# dummy commands for passive checks

define command {
	command_name	no-disk-checks
	command_line	/usr/local/nagios/libexec/check_dummy 2 "CRITICAL: Results of disk checks not coming in!"
}

define command {
	command_name	no-mem-checks
	command_line	/usr/local/nagios/libexec/check_dummy 2 "CRITICAL: Results of memory checks not coming in!"
}

# Notification
define command {
  command_name  host-notify-by-email
  command_line  /usr/bin/printf "%b" "$LONGDATETIME$\n\n$HOSTALIAS$ $NOTIFICATIONTYPE$ $HOSTSTATE$\n\n$HOSTOUTPUT$\n\nLogin: ssh://$HOSTNAME$" | /usr/bin/mail -s "$NOTIFICATIONTYPE$ - $HOSTALIAS$ $HOSTSTATE$!" $CONTACTEMAIL$
}

define command {
  command_name  host-notify-by-sms-email
  command_line  /usr/bin/printf "%b" "$HOSTALIAS$ $NOTIFICATIONTYPE$ $HOSTSTATE$\n\n$HOSTOUTPUT$" | /usr/bin/mail -s "$HOSTALIAS$ $HOSTSTATE$!" $CONTACTPAGER$
}

# 'notify-by-email' command definition
define command {
  command_name  service-notify-by-email
  command_line  /usr/bin/printf "%b" "$LONGDATETIME$ - $SERVICEDESC$ $SERVICESTATE$\n\n$HOSTALIAS$  $NOTIFICATIONTYPE$\n\n$SERVICEOUTPUT$\n\nLogin: ssh://$HOSTNAME$" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ - $HOSTALIAS$ - $SERVICEDESC$ - $SERVICESTATE$" $CONTACTEMAIL$
}

#define command{
#    command_name    check_cert_service
#    command_line    /usr/lib/nagios/plugins/check_cert_service.sh
#}

#define command {
#        command_name process-service-perfdata
#        command_line /usr/lib/nagios/plugins/process_perfdata.pl
#}

#define command {
#        command_name process-host-perfdata
#        command_line /usr/lib/nagios/plugins/process_perfdata.pl -d HOSTPERFDATA
#}


